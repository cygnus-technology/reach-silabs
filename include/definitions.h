/********************************************************************************************
 *    _ ____  ___             _         _     ___              _                        _
 *   (_)__ / | _ \_ _ ___  __| |_  _ __| |_  |   \ _____ _____| |___ _ __ _ __  ___ _ _| |_
 *   | ||_ \ |  _/ '_/ _ \/ _` | || / _|  _| | |) / -_) V / -_) / _ \ '_ \ '  \/ -_) ' \  _|
 *   |_|___/ |_| |_| \___/\__,_|\_,_\__|\__| |___/\___|\_/\___|_\___/ .__/_|_|_\___|_||_\__|
 *                                                                  |_|
 *                           -----------------------------------
 *                          Copyright i3 Product Development 2024
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * @file      definitions.h/.c
 * @brief     A minimal implementation of Reach data access.  Auto-generated by a Python script.
 * @copyright 2023-2024 i3 Product Development. All Rights Reserved.
 *
 * Original Author: Chuck Peplinski
 * Script Author: Joseph Peplinski
 * Script Author: Andrew Carlson
 *
 ********************************************************************************************/

#ifndef __DEFINITIONS_H__
#define __DEFINITIONS_H__

#include "reach.pb.h"

#define INCLUDE_PARAMETER_SERVICE
#define NUM_PARAMS    19
#define NUM_EX_PARAMS 5

#define INCLUDE_FILE_SERVICE
#define NUM_FILES    3

#define INCLUDE_COMMAND_SERVICE
#define NUM_COMMANDS    8

#define INCLUDE_CLI_SERVICE

typedef struct {
  uint32_t pei_id;
  uint8_t data_type;
  uint8_t num_labels;
  const cr_ParamExKey *labels;
} cr_gen_param_ex_t;

extern cr_ParameterValue sCr_param_val[NUM_PARAMS];
extern const cr_DeviceInfoResponse device_info;
extern const cr_ParameterInfo param_desc[NUM_PARAMS];
extern const cr_gen_param_ex_t param_ex_desc[NUM_EX_PARAMS];
extern cr_FileInfo file_descriptions[NUM_FILES];
extern const cr_CommandInfo command_desc[NUM_COMMANDS];

typedef enum {
    PARAM_USER_DEVICE_NAME        = 0,
    PARAM_UPTIME                  = 1,
    PARAM_BUTTON_PRESSED          = 2,
    PARAM_IDENTIFY_LED            = 3,
    PARAM_RGB_LED_STATE           = 4,
    PARAM_COMMAND_LINE_COLOR      = 5,
    PARAM_IDENTIFY                = 6,
    PARAM_IDENTIFY_INTERVAL       = 7,
    PARAM_RELATIVE_HUMIDITY       = 8,
    PARAM_TEMPERATURE             = 9,
    PARAM_LIGHT_LEVEL             = 10,
    PARAM_UV_INDEX                = 11,
    PARAM_MAGNETIC_FIELD_STRENGTH = 12,
    PARAM_ACCELERATION_X_AXIS     = 13,
    PARAM_ACCELERATION_Y_AXIS     = 14,
    PARAM_ACCELERATION_Z_AXIS     = 15,
    PARAM_TIMEZONE_ENABLED        = 16,
    PARAM_TIMEZONE_OFFSET         = 17,
    PARAM_BT_DEVICE_ADDRESS       = 18,
} param_t;

typedef enum {
    PARAM_EI_IDENTIFY_SWITCH = 0,
    PARAM_EI_IDENTIFY_LED    = 1,
    PARAM_EI_TIMEZONE        = 2,
    PARAM_EI_BITTYBIT        = 3,
    PARAM_EI_CLI_COLOR       = 4,
} param_ei_t;

typedef enum {
    BITTYBIT_INDICES_RED   = 0,
    BITTYBIT_INDICES_GREEN = 1,
    BITTYBIT_INDICES_BLUE  = 2,
} bittybit_indices_t;

typedef enum {
    BITTYBIT_RED   = 0b1 << BITTYBIT_INDICES_RED,
    BITTYBIT_GREEN = 0b1 << BITTYBIT_INDICES_GREEN,
    BITTYBIT_BLUE  = 0b1 << BITTYBIT_INDICES_BLUE,
} bittybit_t;

typedef enum {
    CLI_COLOR_OFF     = 0,
    CLI_COLOR_RED     = 1,
    CLI_COLOR_GREEN   = 2,
    CLI_COLOR_YELLOW  = 3,
    CLI_COLOR_BLUE    = 4,
    CLI_COLOR_MAGENTA = 5,
    CLI_COLOR_CYAN    = 6,
    CLI_COLOR_WHITE   = 7,
} cli_color_t;

typedef enum {
    FILE_IO_TXT                = 0,
    FILE_CYGNUS_REACH_LOGO_PNG = 1,
    FILE_DEV_NULL              = 2,
} file_t;

typedef enum {
    COMMAND_RESET_DEFAULTS    = 0,
    COMMAND_CLICK_FOR_WISDOM  = 1,
    COMMAND_NO_LOGGING        = 2,
    COMMAND_MUCH_LOGGING      = 3,
    COMMAND_NOTIFICATIONS_ON  = 4,
    COMMAND_NOTIFICATIONS_OFF = 5,
    COMMAND_REMOTE_CLI_ON     = 6,
    COMMAND_REMOTE_CLI_OFF    = 7,
} command_t;

#endif /* __DEFINITIONS_H__ */
